import asyncio
import logging
import sys
import ssl
import socket
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
BASE_DIR = Path(__file__).resolve().parent.parent
sys.path.append(str(BASE_DIR))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥
try:
    import config
except Exception as e:
    logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å config.py: {e}")
    sys.exit(1)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API-–¥–∞–Ω–Ω—ã–µ
if not hasattr(config, "TELEGRAM_API_ID") or not hasattr(config, "TELEGRAM_API_HASH"):
    logger.error("‚ùå –í config.py –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã: TELEGRAM_API_ID –∏ TELEGRAM_API_HASH")
    sys.exit(1)

if config.TELEGRAM_API_ID == 0 or not config.TELEGRAM_API_HASH:
    logger.error("‚ùå TELEGRAM_API_ID –∏–ª–∏ TELEGRAM_API_HASH –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ config.py")
    sys.exit(1)

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–µ—Å—Å–∏–∏
SESSION_FILE = BASE_DIR / "rates_session.session"
logger.info(f"üìÅ –§–∞–π–ª —Å–µ—Å—Å–∏–∏ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {SESSION_FILE}")

from telethon import TelegramClient
from telethon.errors import SessionPasswordNeededError, PhoneCodeInvalidError

async def main():
    print("=== üì≤ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Telegram —á–µ—Ä–µ–∑ Telethon ===")
    print(f" API ID: {config.TELEGRAM_API_ID}")
    print(f"üîë API Hash: {config.TELEGRAM_API_HASH[:10]}...")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è Windows
    client = TelegramClient(
        str(SESSION_FILE), 
        config.TELEGRAM_API_ID, 
        config.TELEGRAM_API_HASH,
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è Windows
        connection_retries=5,
        retry_delay=1,
        timeout=30,
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º IPv4
        use_ipv6=False
    )

    try:
        logger.info("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram...")
        await client.connect()
        
        if await client.is_user_authorized():
            me = await client.get_me()
            logger.info("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üëã –ó–∞—à–ª–∏ –∫–∞–∫: {me.first_name} (@{me.username})")
            print(f"üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {me.phone}")
            print(f"‚úÖ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: {SESSION_FILE}")
        else:
            logger.info("üì± –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
            print(" –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤–∫–ª—é—á–∞—è –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: +380501234567):")
            
            try:
                phone = input().strip()
                logger.info(f"üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ –Ω–æ–º–µ—Ä: {phone}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥
                await client.send_code_request(phone)
                print("‚úÖ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram.")
                print("üî¢ –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram:")
                
                code = input().strip()
                logger.info("üîê –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å –∫–æ–¥–æ–º...")
                
                try:
                    await client.sign_in(phone, code)
                    logger.info("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                    
                    me = await client.get_me()
                    print(f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {me.first_name}!")
                    print(f"‚úÖ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: {SESSION_FILE}")
                    
                except SessionPasswordNeededError:
                    print("üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
                    password = input().strip()
                    await client.sign_in(password=password)
                    logger.info("‚úÖ –í—Ö–æ–¥ —Å 2FA –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                    
                except PhoneCodeInvalidError:
                    logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                    return
                    
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
                print(f"–û—à–∏–±–∫–∞: {e}")
                
    except Exception as e:
        logger.exception("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram")
        print(f"–û—à–∏–±–∫–∞: {e}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è Windows
        print("\nüîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è Windows:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        print("2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å Windows Defender Firewall")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ –≤ —Å–∏—Å—Ç–µ–º–µ")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Ä–µ–º—è –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")
        
    finally:
        try:
            await client.disconnect()
        except:
            pass

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python –∏ SSL
    print(f"üêç Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    print(f"üîí SSL –≤–µ—Ä—Å–∏—è: {ssl.OPENSSL_VERSION}")
    
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.exception("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞")
        print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")