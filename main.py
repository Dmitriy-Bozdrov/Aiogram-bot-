import asyncio
import aiohttp
import csv
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import CommandStart, Command

# Replace Redis storage with in-memory storage
# from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.storage.redis import RedisStorage
from redis.asyncio import Redis as AsyncRedis  # –≤–∞–∂–Ω–æ: async –≤–∞—Ä–∏–∞–Ω—Ç

from config import TOKEN, GOOGLE_API_KEY, CSV_URL, REDIS_URL, REDIS_DB_FSM
from handlers.cash import register_cash_handlers
from handlers.crypto import register_crypto_handlers
from handlers.start import register_start_handlers
from utils.channel_rates import ChannelRatesParser

# Use in-memory storage instead of Redis
# storage = MemoryStorage()
redis_fsm =AsyncRedis.from_url(f"{REDIS_URL}/{REDIS_DB_FSM}")
storage = RedisStorage(redis=redis_fsm)

bot = Bot(token=TOKEN)
dp = Dispatcher(storage=storage)
google = GOOGLE_API_KEY

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä –∫—É—Ä—Å–æ–≤ –∏–∑ –∫–∞–Ω–∞–ª–∞
channel_rates_parser = ChannelRatesParser(bot, "@obmenvalut13")

# –î–µ–ª–∞–µ–º –ø–∞—Ä—Å–µ—Ä –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ
import utils.channel_rates
utils.channel_rates.channel_rates_parser = channel_rates_parser



# üëá –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
def register_all_handlers(dp: Dispatcher):
    register_cash_handlers(dp)
    register_crypto_handlers(dp)
    register_start_handlers(dp)

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        register_all_handlers(dp)
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        await dp.start_polling(bot)
    except Exception as e:
        if "Conflict: terminated by other getUpdates request" in str(e):
            print("‚ùå –û—à–∏–±–∫–∞: –£–∂–µ –∑–∞–ø—É—â–µ–Ω –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞!")
            print("üí° –†–µ—à–µ–Ω–∏–µ: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –¥—Ä—É–≥–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    except Exception as e:
        if "Conflict: terminated by other getUpdates request" in str(e):
            print("‚ùå –û—à–∏–±–∫–∞: –£–∂–µ –∑–∞–ø—É—â–µ–Ω –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞!")
            print("üí° –†–µ—à–µ–Ω–∏–µ: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –¥—Ä—É–≥–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        else:
            print(f'‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}')
